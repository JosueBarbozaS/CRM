@model IEnumerable<IngeTechCRM.Models.Comunicado>
@{
    ViewData["Title"] = "Gestión de Comunicados";
    var filtroActual = ViewBag.Filtro as string ?? "todos";
}

<div class="container mx-auto px-4 py-8">
    <!-- Breadcrumbs -->
    <nav class="mb-6 flex flex-wrap text-sm">
        <a href="@Url.Action("Index", "Home")" class="text-gray-600 hover:text-indigo-600">Inicio</a>
        <span class="mx-2 text-gray-500">/</span>
        <span class="font-medium text-gray-800">Gestión de Comunicados</span>
    </nav>

    <!-- Encabezado con información de estado -->
    <div class="mb-8 flex flex-wrap items-center justify-between">
        <div class="flex items-center space-x-4">
            <h1 class="text-3xl font-bold text-gray-800">Gestión de Comunicados</h1>
            <!-- Indicador de actualización automática -->
            <div class="flex items-center text-sm text-gray-500">
                <i class="fas fa-sync-alt mr-1"></i>
                <span>Última actualización: <span id="last-update">@DateTime.Now.ToString("HH:mm:ss")</span></span>
            </div>
        </div>
        <div class="flex space-x-3">
            @{
                var pendientes = Model?.Count(c => c.FECHA_ENVIO_PROGRAMADO.HasValue && c.FECHA_ENVIO_PROGRAMADO <= DateTime.Now && !c.FECHA_ENVIO_REAL.HasValue) ?? 0;
            }
            @if (pendientes > 0)
            {
                <div class="flex items-center rounded-lg bg-yellow-50 border border-yellow-200 px-3 py-2 text-yellow-800">
                    <i class="fas fa-exclamation-triangle mr-2"></i>
                    <span class="text-sm font-medium">@pendientes comunicado(s) listo(s) para enviar</span>
                </div>
                <form asp-action="ProcesarComunicadosProgramadosForm" method="post" class="inline" onsubmit="return confirm('¿Está seguro de que desea procesar todos los comunicados programados pendientes?')">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="flex items-center rounded-lg bg-yellow-600 px-4 py-2 font-medium text-white shadow transition hover:bg-yellow-700">
                        <i class="fas fa-play mr-2"></i> Procesar Pendientes (@pendientes)
                    </button>
                </form>
            }
            <a href="@Url.Action("Crear")" class="flex items-center rounded-lg bg-indigo-600 px-4 py-2 font-medium text-white shadow transition hover:bg-indigo-700">
                <i class="fas fa-plus mr-2"></i> Nuevo Comunicado
            </a>
            <!-- Botón de actualización manual -->
            <button onclick="window.location.reload()" class="flex items-center rounded-lg bg-gray-100 px-3 py-2 text-gray-700 transition hover:bg-gray-200" title="Actualizar página">
                <i class="fas fa-refresh"></i>
            </button>
        </div>
    </div>

    <!-- Mensajes de notificación mejorados -->


    <!-- Estadísticas mejoradas -->
    @{
        var totalComunicados = Model?.Count() ?? 0;
        var enviados = Model?.Count(c => c.FECHA_ENVIO_REAL.HasValue) ?? 0;
        var programados = Model?.Count(c => c.FECHA_ENVIO_PROGRAMADO.HasValue && !c.FECHA_ENVIO_REAL.HasValue && c.FECHA_ENVIO_PROGRAMADO > DateTime.Now) ?? 0;
        var borradores = Model?.Count(c => !c.FECHA_ENVIO_PROGRAMADO.HasValue && !c.FECHA_ENVIO_REAL.HasValue) ?? 0;
    }

    @if (totalComunicados > 0)
    {
        <div class="mb-6 grid grid-cols-1 gap-4 md:grid-cols-4">
            <div class="rounded-lg bg-white p-4 shadow border-l-4 border-gray-400">
                <div class="flex items-center justify-between">
                    <div class="flex items-center">
                        <div class="flex h-10 w-10 items-center justify-center rounded-full bg-gray-100 text-gray-600">
                            <i class="fas fa-envelope"></i>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm font-medium text-gray-600">Total</p>
                            <p class="text-2xl font-bold text-gray-900">@totalComunicados</p>
                        </div>
                    </div>
                    <div class="text-xs text-gray-500">100%</div>
                </div>
            </div>

            <div class="rounded-lg bg-white p-4 shadow border-l-4 border-green-400">
                <div class="flex items-center justify-between">
                    <div class="flex items-center">
                        <div class="flex h-10 w-10 items-center justify-center rounded-full bg-green-100 text-green-600">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm font-medium text-gray-600">Enviados</p>
                            <p class="text-2xl font-bold text-gray-900">@enviados</p>
                        </div>
                    </div>
                    <div class="text-xs text-gray-500">
                        @(totalComunicados > 0 ? Math.Round((double)enviados / totalComunicados * 100, 1) : 0)%
                    </div>
                </div>
                @if (totalComunicados > 0)
                {
                    <div class="mt-2 bg-gray-200 rounded-full h-2">
                        <div class="bg-green-500 h-2 rounded-full" style="width: @(Math.Round((double)enviados / totalComunicados * 100, 1))%"></div>
                    </div>
                }
            </div>

            <div class="rounded-lg bg-white p-4 shadow border-l-4 border-blue-400">
                <div class="flex items-center justify-between">
                    <div class="flex items-center">
                        <div class="flex h-10 w-10 items-center justify-center rounded-full bg-blue-100 text-blue-600">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm font-medium text-gray-600">Programados</p>
                            <p class="text-2xl font-bold text-gray-900">@programados</p>
                        </div>
                    </div>
                    <div class="text-xs text-gray-500">
                        @(totalComunicados > 0 ? Math.Round((double)programados / totalComunicados * 100, 1) : 0)%
                    </div>
                </div>
                @if (totalComunicados > 0)
                {
                    <div class="mt-2 bg-gray-200 rounded-full h-2">
                        <div class="bg-blue-500 h-2 rounded-full" style="width: @(Math.Round((double)programados / totalComunicados * 100, 1))%"></div>
                    </div>
                }
            </div>

            @if (pendientes > 0)
            {
                <div class="rounded-lg bg-white p-4 shadow border-l-4 border-yellow-400 animate-pulse">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center">
                            <div class="flex h-10 w-10 items-center justify-center rounded-full bg-yellow-100 text-yellow-600">
                                <i class="fas fa-exclamation-triangle"></i>
                            </div>
                            <div class="ml-3">
                                <p class="text-sm font-medium text-gray-600">Pendientes</p>
                                <p class="text-2xl font-bold text-yellow-600">@pendientes</p>
                            </div>
                        </div>
                        <div class="text-xs text-yellow-600 font-medium">¡Acción requerida!</div>
                    </div>
                </div>
            }
            else
            {
                <div class="rounded-lg bg-white p-4 shadow border-l-4 border-gray-400">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center">
                            <div class="flex h-10 w-10 items-center justify-center rounded-full bg-gray-100 text-gray-600">
                                <i class="fas fa-calendar-check"></i>
                            </div>
                            <div class="ml-3">
                                <p class="text-sm font-medium text-gray-600">Pendientes</p>
                                <p class="text-2xl font-bold text-gray-900">0</p>
                            </div>
                        </div>
                        <div class="text-xs text-green-600 font-medium">✓ Al día</div>
                    </div>
                </div>
            }
        </div>
    }

    <!-- Panel de filtros mejorado -->
    <div class="mb-6 rounded-lg bg-white p-4 shadow">
        <div class="flex flex-wrap items-center justify-between mb-3">
            <h3 class="font-medium text-gray-900">Filtrar comunicados por estado</h3>
            <div class="text-sm text-gray-500">
                @{
                    var comunicadosFiltrados = Model?.AsEnumerable() ?? Enumerable.Empty<IngeTechCRM.Models.Comunicado>();

                    switch (filtroActual)
                    {
                        case "enviados":
                            comunicadosFiltrados = Model?.Where(c => c.FECHA_ENVIO_REAL.HasValue) ?? Enumerable.Empty<IngeTechCRM.Models.Comunicado>();
                            break;
                        case "programados":
                            comunicadosFiltrados = Model?.Where(c => c.FECHA_ENVIO_PROGRAMADO.HasValue && !c.FECHA_ENVIO_REAL.HasValue && c.FECHA_ENVIO_PROGRAMADO > DateTime.Now) ?? Enumerable.Empty<IngeTechCRM.Models.Comunicado>();
                            break;
                        case "pendientes":
                            comunicadosFiltrados = Model?.Where(c => c.FECHA_ENVIO_PROGRAMADO.HasValue && c.FECHA_ENVIO_PROGRAMADO <= DateTime.Now && !c.FECHA_ENVIO_REAL.HasValue) ?? Enumerable.Empty<IngeTechCRM.Models.Comunicado>();
                            break;
                        case "borradores":
                            comunicadosFiltrados = Model?.Where(c => !c.FECHA_ENVIO_PROGRAMADO.HasValue && !c.FECHA_ENVIO_REAL.HasValue) ?? Enumerable.Empty<IngeTechCRM.Models.Comunicado>();
                            break;
                    }
                }
                Mostrando @comunicadosFiltrados.Count() de @totalComunicados comunicados
            </div>
        </div>

        <div class="flex flex-wrap gap-2">
            <a href="@Url.Action("Index", new { filtro = "todos" })"
               class="rounded-lg px-3 py-2 text-sm font-medium transition flex items-center @(filtroActual == "todos" ? "bg-indigo-600 text-white" : "bg-gray-100 text-gray-700 hover:bg-gray-200")">
                <i class="fas fa-th-list mr-2"></i>
                Todos (@totalComunicados)
            </a>
            <a href="@Url.Action("Index", new { filtro = "enviados" })"
               class="rounded-lg px-3 py-2 text-sm font-medium transition flex items-center @(filtroActual == "enviados" ? "bg-indigo-600 text-white" : "bg-green-100 text-green-700 hover:bg-green-200")">
                <i class="fas fa-check-circle mr-2"></i>
                Enviados (@enviados)
            </a>
            <a href="@Url.Action("Index", new { filtro = "programados" })"
               class="rounded-lg px-3 py-2 text-sm font-medium transition flex items-center @(filtroActual == "programados" ? "bg-indigo-600 text-white" : "bg-blue-100 text-blue-700 hover:bg-blue-200")">
                <i class="fas fa-clock mr-2"></i>
                Programados (@programados)
            </a>
            @if (pendientes > 0)
            {
                <a href="@Url.Action("Index", new { filtro = "pendientes" })"
                   class="rounded-lg px-3 py-2 text-sm font-medium transition flex items-center @(filtroActual == "pendientes" ? "bg-indigo-600 text-white" : "bg-yellow-100 text-yellow-700 hover:bg-yellow-200")">
                    <i class="fas fa-exclamation-triangle mr-2"></i>
                    Pendientes (@pendientes)
                    <span class="ml-1 animate-pulse">⚠️</span>
                </a>
            }
            <a href="@Url.Action("Index", new { filtro = "borradores" })"
               class="rounded-lg px-3 py-2 text-sm font-medium transition flex items-center @(filtroActual == "borradores" ? "bg-indigo-600 text-white" : "bg-gray-100 text-gray-700 hover:bg-gray-200")">
                <i class="fas fa-file mr-2"></i>
                Borradores (@borradores)
            </a>
        </div>

        @if (filtroActual != "todos")
        {
            <div class="mt-3 flex items-center justify-between text-sm">
                <div class="text-gray-600">
                    <i class="fas fa-filter mr-1"></i>
                    Filtro activo: <strong class="text-indigo-600">@filtroActual</strong>
                </div>
                <a href="@Url.Action("Index")" class="text-indigo-600 hover:text-indigo-800 flex items-center">
                    <i class="fas fa-times mr-1"></i> Limpiar filtro
                </a>
            </div>
        }
    </div>

    <!-- Tabla de Comunicados mejorada -->
    <div class="overflow-hidden rounded-xl bg-white shadow-lg">
        @if (totalComunicados > 0)
        {
            <div class="px-6 py-4 border-b border-gray-200 bg-gray-50">
                <h3 class="text-lg font-medium text-gray-900">
                    Lista de comunicados
                    @if (filtroActual != "todos")
                    {
                        <span class="text-sm font-normal text-gray-500">- @filtroActual</span>
                    }
                </h3>
            </div>
        }

        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                            <div class="flex items-center">
                                <i class="fas fa-hashtag mr-2"></i>
                                ID
                            </div>
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                            <div class="flex items-center">
                                <i class="fas fa-envelope mr-2"></i>
                                Comunicado
                            </div>
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                            <div class="flex items-center">
                                <i class="fas fa-user mr-2"></i>
                                Creado por
                            </div>
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                            <div class="flex items-center">
                                <i class="fas fa-calendar mr-2"></i>
                                Fechas
                            </div>
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                            <div class="flex items-center">
                                <i class="fas fa-info-circle mr-2"></i>
                                Estado
                            </div>
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                            <div class="flex items-center">
                                <i class="fas fa-cogs mr-2"></i>
                                Acciones
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-200 bg-white">
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var item in comunicadosFiltrados)
                        {
                            var esPendiente = item.FECHA_ENVIO_PROGRAMADO.HasValue && item.FECHA_ENVIO_PROGRAMADO <= DateTime.Now && !item.FECHA_ENVIO_REAL.HasValue;
                            var claseFilaEspecial = esPendiente ? "bg-yellow-50 border-l-4 border-yellow-400" : "";

                            <tr class="hover:bg-gray-50 transition-colors @claseFilaEspecial">
                                <td class="whitespace-nowrap px-6 py-4 text-sm font-medium text-gray-900">
                                    #@item.ID_COMUNICADO
                                </td>
                                <td class="px-6 py-4 text-sm text-gray-500">
                                    <div class="max-w-xs">
                                        <div class="font-medium text-gray-900 mb-1">@item.TITULO</div>
                                        <div class="text-xs text-gray-500 line-clamp-2">
                                            @if (item.MENSAJE.Length > 100)
                                            {
                                                @(item.MENSAJE.Substring(0, 100) + "...")
                                            }
                                            else
                                            {
                                                @item.MENSAJE
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td class="whitespace-nowrap px-6 py-4 text-sm">
                                    <div class="flex items-center">
                                        <div class="h-8 w-8 rounded-full bg-indigo-100 flex items-center justify-center">
                                            <i class="fas fa-user text-indigo-600 text-xs"></i>
                                        </div>
                                        <div class="ml-3">
                                            <div class="text-sm font-medium text-gray-900">
                                                @(item.UsuarioCreador?.NOMBRE_COMPLETO ?? "N/A")
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 text-sm text-gray-500">
                                    <div class="space-y-1">
                                        <div class="flex items-center text-xs">
                                            <i class="fas fa-plus-circle mr-1 text-gray-400"></i>
                                            <span>Creado: @item.FECHA_CREACION.ToString("dd/MM/yyyy HH:mm")</span>
                                        </div>
                                        @if (item.FECHA_ENVIO_PROGRAMADO.HasValue && !item.FECHA_ENVIO_REAL.HasValue)
                                        {
                                            <div class="flex items-center text-xs">
                                                <i class="fas fa-clock mr-1 text-blue-500"></i>
                                                <span class="@(esPendiente ? "text-yellow-600 font-medium" : "text-blue-600")">
                                                    @(esPendiente ? "Para enviar" : "Programado"): @item.FECHA_ENVIO_PROGRAMADO.Value.ToString("dd/MM/yyyy HH:mm")
                                                </span>
                                            </div>
                                        }
                                        @if (item.FECHA_ENVIO_REAL.HasValue)
                                        {
                                            <div class="flex items-center text-xs">
                                                <i class="fas fa-check mr-1 text-green-500"></i>
                                                <span class="text-green-600">Enviado: @item.FECHA_ENVIO_REAL.Value.ToString("dd/MM/yyyy HH:mm")</span>
                                            </div>
                                        }
                                    </div>
                                </td>
                                <td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">
                                    @{
                                        string claseBadge = "bg-gray-100 text-gray-800";
                                        string estadoTexto = "Borrador";
                                        string iconoEstado = "fas fa-file";

                                        if (item.FECHA_ENVIO_REAL.HasValue)
                                        {
                                            claseBadge = "bg-green-100 text-green-800 border border-green-200";
                                            estadoTexto = "Enviado";
                                            iconoEstado = "fas fa-check-circle";
                                        }
                                        else if (item.FECHA_ENVIO_PROGRAMADO.HasValue && item.FECHA_ENVIO_PROGRAMADO > DateTime.Now)
                                        {
                                            claseBadge = "bg-blue-100 text-blue-800 border border-blue-200";
                                            estadoTexto = "Programado";
                                            iconoEstado = "fas fa-clock";
                                        }
                                        else if (item.FECHA_ENVIO_PROGRAMADO.HasValue && item.FECHA_ENVIO_PROGRAMADO <= DateTime.Now)
                                        {
                                            claseBadge = "bg-yellow-100 text-yellow-800 border border-yellow-200";
                                            estadoTexto = "Pendiente";
                                            iconoEstado = "fas fa-exclamation-triangle";
                                        }
                                    }
                                    <span class="inline-flex items-center rounded-full @claseBadge px-3 py-1 text-xs font-medium">
                                        <i class="@iconoEstado mr-1"></i>
                                        @estadoTexto
                                    </span>
                                </td>
                                <td class="whitespace-nowrap px-6 py-4 text-sm font-medium">
                                    <div class="flex space-x-2">
                                        <a href="@Url.Action("Detalles", new { id = item.ID_COMUNICADO })"
                                           class="rounded-full bg-blue-100 p-2 text-blue-600 transition hover:bg-blue-200"
                                           title="Ver detalles">
                                            <i class="fas fa-eye"></i>
                                        </a>

                                        @if (!item.FECHA_ENVIO_REAL.HasValue)
                                        {
                                            <a href="@Url.Action("Editar", new { id = item.ID_COMUNICADO })"
                                               class="rounded-full bg-green-100 p-2 text-green-600 transition hover:bg-green-200"
                                               title="Editar">
                                                <i class="fas fa-edit"></i>
                                            </a>

                                            <form asp-action="EnviarComunicadoManual" method="post" class="inline"
                                                  onsubmit="return confirm('¿Está seguro de que desea enviar este comunicado ahora?')">
                                                <input type="hidden" name="id" value="@item.ID_COMUNICADO" />
                                                <input type="hidden" name="enviarPorCorreo" value="true" />
                                                <input type="hidden" name="enviarPorWhatsApp" value="true" />
                                                <button type="submit"
                                                        class="rounded-full bg-indigo-100 p-2 text-indigo-600 transition hover:bg-indigo-200"
                                                        title="Enviar ahora">
                                                    <i class="fas fa-paper-plane"></i>
                                                </button>
                                            </form>

                                            @if (item.FECHA_ENVIO_PROGRAMADO.HasValue)
                                            {
                                                <form asp-action="CancelarEnvioProgramado" method="post" class="inline"
                                                      onsubmit="return confirm('¿Está seguro de que desea cancelar el envío programado?')">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="id" value="@item.ID_COMUNICADO" />
                                                    <button type="submit"
                                                            class="rounded-full bg-orange-100 p-2 text-orange-600 transition hover:bg-orange-200"
                                                            title="Cancelar envío programado">
                                                        <i class="fas fa-calendar-times"></i>
                                                    </button>
                                                </form>
                                            }
                                        }

                                        <a href="@Url.Action("Eliminar", new { id = item.ID_COMUNICADO })"
                                           class="rounded-full bg-red-100 p-2 text-red-600 transition hover:bg-red-200"
                                           title="Eliminar"
                                           >
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }

                        @if (!comunicadosFiltrados.Any())
                        {
                            <tr>
                                <td colspan="6" class="py-12 text-center text-gray-500">
                                    <div class="flex flex-col items-center justify-center">
                                        <i class="fas fa-search text-4xl text-gray-300 mb-4"></i>
                                        <h3 class="text-lg font-medium text-gray-900 mb-2">No hay comunicados</h3>
                                        <p class="text-sm">No se encontraron comunicados con el filtro: <strong class="text-indigo-600">@filtroActual</strong></p>
                                        <a href="@Url.Action("Index")" class="mt-3 text-indigo-600 hover:underline flex items-center">
                                            <i class="fas fa-arrow-left mr-1"></i>
                                            Ver todos los comunicados
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="py-12 text-center text-gray-500">
                                <div class="flex flex-col items-center justify-center">
                                    <i class="fas fa-envelope-open text-4xl text-gray-300 mb-4"></i>
                                    <h3 class="text-lg font-medium text-gray-900 mb-2">Sin comunicados</h3>
                                    <p class="text-sm mb-4">No hay comunicados registrados en el sistema.</p>
                                    <a href="@Url.Action("Crear")" class="inline-flex items-center px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700">
                                        <i class="fas fa-plus mr-2"></i>
                                        Crear primer comunicado
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Footer de la tabla con información adicional -->
        @if (totalComunicados > 0)
        {
            <div class="px-6 py-3 bg-gray-50 border-t border-gray-200">
                <div class="flex items-center justify-between text-sm text-gray-500">
                    <div class="flex items-center space-x-4">
                        <span>Total: @comunicadosFiltrados.Count() comunicados</span>
                        @if (pendientes > 0)
                        {
                            <span class="text-yellow-600 font-medium">
                                <i class="fas fa-exclamation-triangle mr-1"></i>
                                @pendientes requieren atención
                            </span>
                        }
                    </div>
                    <div class="text-xs">
                        Última actualización: @DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss")
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Información adicional para comunicados pendientes -->
    @if (pendientes > 0 && filtroActual != "pendientes")
    {
        <div class="mt-6 rounded-lg bg-yellow-50 border border-yellow-200 p-4">
            <div class="flex items-start">
                <i class="fas fa-info-circle text-yellow-600 mr-3 mt-0.5"></i>
                <div class="flex-1">
                    <h4 class="font-medium text-yellow-800 mb-1">Comunicados pendientes de envío</h4>
                    <p class="text-sm text-yellow-700 mb-3">
                        Hay @pendientes comunicado(s) programado(s) que ya deberían haberse enviado.
                        El servicio automático los procesará pronto, o puedes procesarlos manualmente.
                    </p>
                    <div class="flex space-x-3">
                        <a href="@Url.Action("Index", new { filtro = "pendientes" })"
                           class="text-sm bg-yellow-600 text-white px-3 py-1 rounded hover:bg-yellow-700">
                            Ver pendientes
                        </a>
                        <form asp-action="ProcesarComunicadosProgramadosForm" method="post" class="inline">
                            @Html.AntiForgeryToken()
                            <button type="submit"
                                    class="text-sm bg-yellow-100 text-yellow-800 px-3 py-1 rounded border border-yellow-300 hover:bg-yellow-200"
                                    onclick="return confirm('¿Procesar todos los comunicados pendientes ahora?')">
                                Procesar ahora
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Meta refresh para actualización automática cada 2 minutos -->
<meta http-equiv="refresh" content="120">